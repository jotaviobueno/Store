# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserSchema {
  id: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  country: String
  city: String
  state: String
  avatarUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AccessSchema {
  id: String!
  userAgent: String!
  lastAccess: DateTime!
  disconnectedAt: DateTime
  user: UserSchema!
}

type ArticleSchema {
  id: String!
  title: String!
  body: String!
  imagesUrl: [String!]!
  published: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: UserSchema!
  categories: [CategorySchema!]!
  tags: [TagSchema!]!
}

type CategorySchema {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  articles: [ArticleSchema!]!
}

type TagSchema {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  articles: [ArticleSchema!]!
}

type RoleSchema {
  id: String!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  permissions: [PermissionSchema!]!
}

type UserRoleSchema {
  id: String!
  createdAt: DateTime!
}

type PermissionSchema {
  id: String!
  name: String!
}

type ProductSchema {
  id: String!
  name: String!
  description: String!
  imagesUrl: [String!]
  price: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  productOwner: UserSchema!
  totalStock: Int!
  stockHistory: [StockSchema!]!
}

type CartSchema {
  id: String!
  quantity: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StockSchema {
  id: String!
  type: String!
  stock: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  users(paginationOptions: PaginationOptionsInput!): [UserSchema!]!
  user(userId: IdInput!): UserSchema!
  accesses(paginationOptions: PaginationOptionsInput!): [AccessSchema!]!
  access(accessId: IdInput!): AccessSchema!
  roles(paginationOptions: PaginationOptionsInput!): [RoleSchema!]!
  role(id: IdInput!): RoleSchema!
  articles(paginationOptions: PaginationOptionsInput!, searchArticleInput: SearchArticleInput!): [ArticleSchema!]!
  article(articleId: IdInput!): ArticleSchema!
  tags(paginationOption: PaginationOptionsInput!): [TagSchema!]!
  tag(tagId: IdInput!): TagSchema!
  categories(paginationOptions: PaginationOptionsInput!): [CategorySchema!]!
  category(categoryId: IdInput!): CategorySchema!
  products(paginationOptions: PaginationOptionsInput!): [ProductSchema!]!
  product(productId: IdInput!): ProductSchema!
  cart(paginationOptions: PaginationOptionsInput!): [CartSchema!]!
}

input PaginationOptionsInput {
  page: Float = 1
  per_page: Float = 10
}

input IdInput {
  id: String!
}

input SearchArticleInput {
  q: String
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): UserSchema!
  updateUser(userId: IdInput!, updateUserInput: UpdateUserInput!): UserSchema!
  removeUser(userId: IdInput!): Boolean!
  createAccess(createAccessInput: CreateAccessInput!): String!
  removeAccess(accessId: IdInput!): Boolean!
  assignUserInRole(userRoleInput: UserRoleInput!): UserRoleSchema!
  removeUserRole(userRoleInput: UserRoleInput!): Boolean!
  createArticle(createArticleInput: CreateArticleInput!): ArticleSchema!
  updateArticle(articleId: IdInput!, updateArticleInput: UpdateArticleInput!): ArticleSchema!
  removeArticle(articleId: IdInput!): ArticleSchema!
  updateTag(tagId: IdInput!, updateTagInput: UpdateTagInput!): TagSchema!
  removeTag(tagId: IdInput!): Boolean!
  updateCategory(categoryId: IdInput!, updateCategoryInput: UpdateCategoryInput!): CategorySchema!
  removeCategory(categoryId: IdInput!): Boolean!
  createProduct(createProductInput: CreateProductInput!): ProductSchema!
  updateProduct(productId: IdInput!, updateProductInput: UpdateProductInput!): ProductSchema!
  removeProduct(productId: IdInput!): Boolean!
  createCart(createCartInput: CreateCartInput!): CartSchema!
  removeCart(cartId: IdInput!): Boolean!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  username: String
  email: String
  password: String
}

input CreateAccessInput {
  email: String!
  password: String!
}

input UserRoleInput {
  userId: String!
  roleId: String!
}

input CreateArticleInput {
  title: String!
  body: String!
  imagesUrl: String
  tags: [String!]!
  categories: [String!]!
  published: Boolean
}

input UpdateArticleInput {
  title: String
  body: String
  imagesUrl: String
  tags: [String!]
  categories: [String!]
  published: Boolean
}

input UpdateTagInput {
  name: String!
}

input UpdateCategoryInput {
  name: String!
}

input CreateProductInput {
  name: String!
  description: String!
  imagesUrl: [String!]!
  price: Float!
  stock: Int!
}

input UpdateProductInput {
  name: String
  description: String
  imagesUrl: [String!]
  price: Float
  stock: Int
}

input CreateCartInput {
  quantity: Int!
  productId: String!
}